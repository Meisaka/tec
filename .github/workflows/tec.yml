name: Trillek Engine CI

on: [pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-16.04, macOS-latest]
        include:
          - os: ubuntu-16.04
            compiler: gcc
            version: "7"
            arch: x64
            vcpkg-triplet: x64-linux
          - os: ubuntu-latest
            compiler: gcc
            version: "7"
            arch: x64
            vcpkg-triplet: x64-linux
          - os: macOS-latest
            arch: x64
            vcpkg-triplet: x64-osx
    env:
      VCPKG_INSTALLATION_ROOT: /usr/local/share/vcpkg
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Cache vcpkg (MacOS)
      uses: actions/cache@v1
      if: runner.os == 'macOS'
      with:
        key: vcpkg-${{ matrix.os }}-${{ matrix.arch }}
        path: /usr/local/share/vcpkg
    - name: Cache vcpkg installed (Linux)
      uses: actions/cache@v1
      if: runner.os == 'Linux'
      with:
        key: vcpkg-${{ matrix.os }}-${{ matrix.arch }}
        path: /usr/local/share/vcpkg/installed
    
    # Linux specific
    - name: Install GCC (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          sudo apt-get install -y g++-${{ matrix.version }} g++-${{ matrix.version }}-multilib
          echo "::set-env name=CC::gcc-${{ matrix.version }}"
          echo "::set-env name=CXX::g++-${{ matrix.version }}"
        else
          sudo apt-get install -y clang-${{ matrix.version }} g++-multilib
          echo "::set-env name=CC::clang-${{ matrix.version }}"
          echo "::set-env name=CXX::clang++-${{ matrix.version }}"
        fi
    - name: Install os deps (Linux)
      if: runner.os == 'Linux'
      run: sudo apt-get install libgl1-mesa-dev xorg-dev libglu1-mesa-dev libxinerama-dev libxcursor-dev p7zip-full -y
        
    # MacOS specific
    - name: Checkout vcpkg (MacOS)
      if: runner.os == 'macOS'
      run: if [ ! -d "$VCPKG_INSTALLATION_ROOT" ]; then git clone https://github.com/microsoft/vcpkg.git $VCPKG_INSTALLATION_ROOT; fi
    - name: Bootstrap vcpkg (MacOS)
      if: runner.os == 'macOS'
      run: $VCPKG_INSTALLATION_ROOT/bootstrap-vcpkg.sh
      
    # Shared
    - name: Install deps vcpkg
      run: $VCPKG_INSTALLATION_ROOT/vcpkg install asio glew glfw3 glm lua openal-soft protobuf zlib imgui spdlog --triplet ${{ matrix.vcpkg-triplet }}
      
    - name: Install bullet with vcpkg (non MacOS)
      if: runner.os != 'macOS'
      run: $VCPKG_INSTALLATION_ROOT/vcpkg install bullet3 --triplet ${{ matrix.vcpkg-triplet }}
    - name: Install bullet with brew (MacOS)
      if: runner.os == 'macOS'
      run: brew install bullet
      
    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build
    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake
    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build .
      
  build-windows:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        arch: [Win32, x64]
        include:
          - arch: x64
            vcpkg-triplet: x64-windows
          - arch: Win32
            vcpkg-triplet: x86-windows
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Cache vcpkg installed
      uses: actions/cache@v1
      with:
        key: vcpkg-${{ matrix.os }}-${{ matrix.arch }}
        path: C:/vcpkg/installed
    - name: Install deps vcpkg
      run: vcpkg install asio bullet3 glew glfw3 glm lua openal-soft protobuf zlib imgui spdlog --triplet ${{ matrix.vcpkg-triplet }}
    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build
    - name: Configure cmake
      working-directory: ${{runner.workspace}}/build
      run: cmake $env:GITHUB_WORKSPACE -DCMAKE_GENERATOR_PLATFORM=${{matrix.arch}} -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake"
    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build .
      